version: "3"
services:
  traefik:
    build:
      context: .
      dockerfile: dockerfile.traefik
      args:
        DOMAIN_1: ${DOMAIN_1}
        DOMAIN_2: ${DOMAIN_2}
    container_name: "traefik"
    command:
      - "--certificatesresolvers.dns-cloudflare.acme.email=${CF_API_EMAIL}"
    ports:
      - 80:80
      - 443:443
    environment:
      - CF_API_EMAIL=${CF_API_EMAIL}
      - CF_API_KEY=${CF_API_KEY}
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/rules:/rules:ro"
      - "./shared:/shared:ro"      
      - "./traefik/traefik.yml:/traefik.yml:ro"
      - "./traefik/logs:/logs:rw"
    labels:
      # Global http-->https
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:[a-z-.]+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=http"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      # API
      - "traefik.enable=true"
      - "traefik.http.routers.api.entrypoints=https"
      - "traefik.http.routers.api.rule=Host(`api.${DOMAIN_1}`)"
      # Services - API
      - "traefik.http.routers.api.service=api@internal"
      # Middlewares
      - "traefik.http.routers.api.middlewares=middlewares-basic-auth@file"
      # Wildcard cert
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=dns-cloudflare"
      - "traefik.http.routers.api.tls.domains[0].main=${DOMAIN_1}"
      - "traefik.http.routers.api.tls.domains[0].sans=*.${DOMAIN_1}"
      - "traefik.http.routers.api.tls.domains[1].main=${DOMAIN_2}"
      - "traefik.http.routers.api.tls.domains[1].sans=*.${DOMAIN_2}"
  hastatic:
    build:
      context: .
      dockerfile: dockerfile.hastatic
      args:
        DOMAIN_1: ${DOMAIN_1}
        DOMAIN_2: ${DOMAIN_2}
    container_name: "hastatic"
    ports:
      - "3000:3000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hastatic.tls=true"
      - "traefik.http.routers.hastatic.entrypoints=https"
      - "traefik.http.routers.hastatic.rule=Host(`web.${DOMAIN_1}`)"
  filebrowser:
    build:
      context: .
      dockerfile: dockerfile.filebrowser
      args:
        DOMAIN_1: ${DOMAIN_1}
    ports:
      - 8888:80
    container_name: filebrowser
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.filebrowser.tls=true"
      - "traefik.http.routers.filebrowser.entrypoints=https"     
      - "traefik.http.routers.filebrowser.rule=Host(`files.${DOMAIN_1}`)"
    environment:
      - FB_BASEURL=/
  authelia:
    build:
      context: .
      dockerfile: dockerfile.authelia
    container_name: "authelia"
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - DOMAIN_1=${DOMAIN_1}
      - AUTHELIA_JWT_SECRET_FILE=/run/secrets/authelia_jwt_secret
      - AUTHELIA_SESSION_SECRET_FILE=/run/secrets/authelia_session_secret       
    volumes:
      - ./authelia:/config
      - ./authelia/secrets:/run/secrets:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.authelia-https.rule=Host(`login.${DOMAIN_1}`)"     
      - "traefik.http.routers.authelia-https.entrypoints=https"
      - "traefik.http.routers.authelia-https.tls=true"
      - "traefik.http.routers.authelia-https.service=authelia-svc"
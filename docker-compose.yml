version: "3"
services:
  traefik:
    build:
      context: .
      dockerfile: dockerfile.traefik
      args:
        DOMAIN_1: ${DOMAIN_1}
        DOMAIN_2: ${DOMAIN_2}
    container_name: "traefik"
    command:
      # Globals
      - "--log.level=DEBUG"
      - "--api=true"
      - "--global.sendAnonymousUsage=false"
      # Docker
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      # Entrypoints
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # LetsEncrypt ${DOMAIN_1}
      - "--certificatesresolvers.domain1dnsresolver.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.domain1dnsresolver.acme.email=${CF_API_EMAIL}"
      - "--certificatesresolvers.domain1dnsresolver.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.domain1dnsresolver.acme.storage=/etc/traefik/${DOMAIN_1}/acme.json"
      # LetsEncrypt ${DOMAIN_2}
      - "--certificatesresolvers.domain2dnsresolver.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.domain2dnsresolver.acme.email=${CF_API_EMAIL}"
      - "--certificatesresolvers.domain2dnsresolver.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.domain2dnsresolver.acme.storage=/etc/traefik/${DOMAIN_2}/acme.json"      
    ports:
      - "80:80"
      - "443:443"
    environment:
      - CF_API_EMAIL=${CF_API_EMAIL}
      - CF_API_KEY=${CF_API_KEY}
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      # API
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`api.${DOMAIN_1}`)"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.http.services.traefik.loadbalancer.server.scheme=http"
      # Wildcard cert
      - "traefik.http.routers.traefik.tls.domains[0].main=${DOMAIN_1}"
      - "traefik.http.routers.traefik.tls.domains[0].sans=*.${DOMAIN_1}"
      - "traefik.http.routers.traefik.tls.certresolver=domain1dnsresolver"
      # Auth
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIKADMIN}"
      - "traefik.http.routers.redirect-to-https.middlewares=authelia"
      - "traefik.http.routers.redirect-to-https.service=api@internal"
      - "traefik.http.middlewares.strip.stripprefix.prefixes=/"      
      - "traefik.http.middlewares.authelia.forwardauth.address=http://authelia:9091/api/verify?rd=https://login.${DOMAIN_1}/"
      - "traefik.http.middlewares.authelia.forwardauth.trustforwardheader=true"
      - traefik.http.middlewares.authelia.forwardauth.authresponseheaders=Remote-User, Remote-Groups
      # Global http-->https
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:[a-z-.]+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
  hastatic:
    build:
      context: .
      dockerfile: dockerfile.hastatic
      args:
        DOMAIN_1: ${DOMAIN_1}
        DOMAIN_2: ${DOMAIN_2}    
    container_name: "hastatic"
    ports:
      - "3000:3000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hastatic.rule=Host(`web.${DOMAIN_1}`)"
      - "traefik.http.routers.hastatic.entrypoints=websecure"
      - "traefik.http.routers.hastatic.tls.domains[0].main=${DOMAIN_1}"
      - "traefik.http.routers.hastatic.tls.domains[0].sans=*.${DOMAIN_1}"
      - "traefik.http.routers.hastatic.tls.certresolver=domain2dnsresolver"
  filebrowser:
    image: filebrowser/filebrowser
    ports:
      - 8888:80
    container_name: filebrowser
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.filebrowser.rule=Host(`files.${DOMAIN_1}`)"
      - "traefik.http.routers.filebrowser.entrypoints=websecure"
      - "traefik.http.routers.filebrowser.tls.domains[0].main=${DOMAIN_1}"
      - "traefik.http.routers.filebrowser.tls.domains[0].sans=*.${DOMAIN_1}"
      - "traefik.http.routers.filebrowser.tls.certresolver=domain2dnsresolver"      
    environment:
      - FB_BASEURL=/
  authelia:
    build:
      context: .
      dockerfile: dockerfile.authelia
      args:
        DOMAIN_1: ${DOMAIN_1}
    container_name: "authelia"
    restart: unless-stopped
    environment:
      - TZ=America/Los_Angeles
      - DOMAIN_1=${DOMAIN_1}
    secrets:
      authelia_jwt_secret:
        file: /config/secrets/authelia_jwt_secret
      authelia_session_secret:
        file: /config/secrets/authelia_session_secret      
    volumes:
      - ./authelia:/config
      - ./authelia/secrets:/config/secrets:ro 
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.authelia-https.rule=Host(`login.${DOMAIN_1}`)"     
      - "traefik.http.routers.authelia-https.entrypoints=websecure"
      - "traefik.http.routers.authelia-https.service=authelia-svc"
      - "traefik.http.services.authelia-svc.loadbalancer.server.port=9091"